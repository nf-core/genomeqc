/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: 'NCBIGENOMEDOWNLOAD' {
        ext.args = "--format fasta,gff -N"
        publishDir = [
            path: { "${params.outdir}/ncbigenomedownload" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:FASTA_GXF_BUSCO_PLOT:EXTRACT_PROTEINS' {
        ext.args = '-y -S'
        publishDir = [
            path: { "${params.outdir}/gffread" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }


    withName: 'FASTAVALIDATOR' {
        publishDir = [
            path: { "${params.outdir}/fastavalidator" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'ORTHOFINDER' {
        publishDir = [
            path: { "${params.outdir}/orthofinder" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:GENOME:BUSCO_BUSCO' {
        publishDir = [
            path: { "${params.outdir}/busco" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    } 

    withName: 'MERQURY_MERQURY' {
        publishDir = [
            path: { "${params.outdir}/merqury" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    } 
    withName: 'MERYL_COUNT' {
        publishDir = [
            path: { "${params.outdir}/meryl_count" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    } 
    withName: 'MERYL_UNIONSUM' {
        publishDir = [
            path: { "${params.outdir}/meryl_unionsum" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    } 

    withName: 'SORT_BY_LENGTH' {
        ext.prefix = { "${meta.id}_sorted" }
    }

    withName: 'TIDK_EXPLORE' {
        ext.args = "--minimum 5 --maximum 12"
        publishDir = [
            path: { "${params.outdir}/tidk_explore" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]        
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'LONGEST' {
        publishDir = [
            path: { "$params.outdir/output_data/longest" }, 
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'PLOT_BUSCO_IDEOGRAM' {
        publishDir = [
            path: { "${params.outdir}/busco_ideogram" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'LONGEST' {
        publishDir = [
            path: { "${params.outdir}/longes_isoform" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*:FASTA_GXF_BUSCO_PLOT:BUSCO_ASSEMBLY' {
        ext.args = '--metaeuk'
        publishDir = [
            path: { "${params.outdir}/busco/fasta" },
            mode: params.publish_dir_mode,
            pattern: 'short_summary.*.txt',
            saveAs: { filename -> "short_summary.specific.${meta.id}.${lineage}.txt" }
        ]
    }

    withName: '.*:FASTA_GXF_BUSCO_PLOT:PLOT_ASSEMBLY' {
        ext.prefix = 'busco_figure'
        publishDir = [
            path: { "${params.outdir}/busco/fasta" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals("versions.yml") ? null : filename }
        ]
    }

    withName: '.*:FASTA_GXF_BUSCO_PLOT:BUSCO_ANNOTATION' {
        ext.args = '--metaeuk'
        publishDir = [
            path: { "${params.outdir}/busco/gff" },
            mode: params.publish_dir_mode,
            pattern: 'short_summary.*.txt',
            saveAs: { filename -> "short_summary.specific.${meta.id}.${lineage}.txt" }
        ]
    }

    withName: '.*:FASTA_GXF_BUSCO_PLOT:PLOT_ANNOTATION' {
        ext.prefix = 'busco_figure'
        publishDir = [
            path: { "${params.outdir}/busco/gff" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals("versions.yml") ? null : filename }
        ]
    }

}
