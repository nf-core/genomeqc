/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'NCBIGENOMEDOWNLOAD' {
        ext.args = "--format fasta,gff -N"
        publishDir = [
            path: { "${params.outdir}/ncbigenomedownload" },
            mode: params.publish_dir_mode,
            enabled: params.save_assembly
        ]
    }

    withName: 'GFFREAD' {
        ext.args = '-y -S'
        publishDir = [
            path: { "${params.outdir}/gffread" },
            mode: params.publish_dir_mode,
            enabled: params.save_extracted_seqs
        ]
    }

    withName: 'PIGZ_UNCOMPRESS' {
        publishDir = [
            path: { "${params.outdir}/pigz" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }


    withName: 'AGAT_SPSTATISTICS' {
        publishDir = [
            path: { "${params.outdir}/agat" },
            mode: params.publish_dir_mode,
            //pattern: '*.txt'
        ]
    }

    withName: 'AGAT_CONVERTSPGXF2GXF' {
        publishDir = [
            path: { "${params.outdir}/agat" },
            mode: params.publish_dir_mode,
            enabled: params.save_validated_annotation
        ]
    }

    withName: 'FASTAVALIDATOR' {
        publishDir = [
            path: { "${params.outdir}/fastavalidator" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'ORTHOFINDER' {
        publishDir = [
            path: { "${params.outdir}/orthofinder" },
            mode: params.publish_dir_mode,
            enabled: params.save_orthofinder_results,
        ]
    }

    withName: 'BUSCO_BUSCO' {
        publishDir = [
            path: { "${params.outdir}/busco" },
            mode: params.publish_dir_mode,
            pattern: '*.txt'
        ]
    }

    withName: 'MERQURY_MERQURY' {
        publishDir = [
            path: { "${params.outdir}/merqury" },
            mode: params.publish_dir_mode
        ]
    }
    withName: 'MERYL_COUNT' {
        publishDir = [
            path: { "${params.outdir}/meryl_count" },
            mode: params.publish_dir_mode
        ]
    }
    withName: 'MERYL_UNIONSUM' {
        publishDir = [
            path: { "${params.outdir}/meryl_unionsum" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'SORT_BY_LENGTH' {
        ext.prefix = { "${meta.id}_sorted" }
        publishDir = [
            path: { "${params.outdir}/seqkit_sorted" },
            mode: params.publish_dir_mode,
            enabled: params.save_sorted_seqs
        ]
    }

    withName: 'FILTER_BY_LENGTH' {
        ext.prefix = { "${meta.id}_filtered" }
        publishDir = [
            path: { "${params.outdir}/seqkit_filtered" },
            mode: params.publish_dir_mode,
            enabled: params.save_filtered_seqs,
        ]
    }

    withName: 'TIDK_EXPLORE' {
        ext.args = "--minimum 5 --maximum 12"
        publishDir = [
            path: { "${params.outdir}/tidk_explore" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'QUAST' {
        publishDir = [
            path: { "${params.outdir}/quast" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.endsWith('.quast.tsv') ? null : filename } // Only publish folders with reports
        ]
    }    

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'LONGEST' {
        publishDir = [
            path: { "${params.outdir}/longest" },
            mode: params.publish_dir_mode,
            enabled: params.save_longest_isoform
        ]
    }

    withName: 'GENOME_ANNOTATION_BUSCO_IDEOGRAM' {
        publishDir = [
            path: { "${params.outdir}/busco" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'GENOME_ONLY_BUSCO_IDEOGRAM' {
        publishDir = [
            path: { "${params.outdir}/busco" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'GENE_OVERLAPS' {
        publishDir = [
            path: { "${params.outdir}/gene_overlaps" },
            mode: params.publish_dir_mode
        ]
    }

    withName: 'TREE_SUMMARY' {
        ext.args   = { params.tree_scale ? "--tree_scale ${params.tree_scale}" : '' }
        publishDir = [
            path: { "${params.outdir}/tree_summary" },
            mode: params.publish_dir_mode
        ]
    }

}
